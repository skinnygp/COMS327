
dungeon.c,1080
#define RUN_ON_MAC1,0
#define htobe32(21,328
#define htobe16(22,351
#define be32toh(23,374
#define be16toh(24,397
typedef struct corridor_path 43,1013
} corridor_path_t;50,1245
static int32_t corridor_path_cmp(52,1265
static void dijkstra_corridor(58,1528
static int connect_two_points(162,5683
int connect_two_points_recursive(188,6558
static int connect_two_rooms(215,7437
static int connect_rooms(232,8012
int connect_rooms_old(242,8185
static int place_room(301,10211
static int place_rooms(377,12584
static int make_rooms(387,12730
static int empty_dungeon(418,13394
int gen_dungeon(436,13793
void render_dungeon(460,14146
static int write_dungeon_map(527,15757
int write_rooms(610,18145
uint32_t calculate_dungeon_size(624,18507
int write_dungeon(630,18774
static int read_dungeon_map(686,20132
static int read_rooms(712,20822
int read_dungeon(725,21135
void delete_dungeon(808,23092
void init_dungeon(811,23131
bool game_over(816,23227
void player_move(830,23549
void monsters_move(882,25586
int32_t turn_cmp(934,27431
void play(946,27779

dungeon.h,2112
#define DUNGEON_H2,18
typedef enum dim 11,137
  dim_x,12,156
  dim_y,13,165
  num_dims14,174
} dim_t;15,185
typedef int16_t pair_t[pair_t17,195
#define DUNGEON_X 19,230
#define DUNGEON_Y 20,265
#define MIN_ROOMS 21,299
#define MAX_ROOMS 22,333
#define ROOM_MIN_X 23,367
#define ROOM_MIN_Y 24,401
#define ROOM_SEPARATION 25,434
#define MAX_PLACEMENT_ATTEMPTS 26,467
#define SAVE_DIR 27,503
#define DUNGEON_SAVE_FILE 28,544
#define DUNGEON_SAVE_SEMANTIC 29,585
#define DUNGEON_SAVE_VERSION 30,625
#define VISUAL_RANGE 31,659
#define PC_SPEED 32,693
#define UP_KEY 33,727
#define DOWN_KEY 34,761
#define RIGHT_KEY 35,795
#define LEFT_KEY 36,829
#define MIN_MONSTER_SPEED 37,863
#define MAX_MONSTER_SPEED 38,896
#define DELAY 39,930
#define mappair(40,965
#define mapxy(41,1022
#define hardnesspair(42,1057
#define hardnessxy(43,1124
#define NONE 44,1169
#define RED 45,1208
#define LIGHT_RED 46,1254
#define GREEN 47,1297
#define LIGHT_GREEN 48,1343
#define BLUE 49,1386
#define LIGHT_BLUE 50,1432
#define DARY_GRAY 51,1475
#define CYAN 52,1518
#define LIGHT_CYAN 53,1561
#define PURPLE 54,1604
#define LIGHT_PURPLE 55,1647
#define BROWN 56,1690
#define YELLOW 57,1733
#define LIGHT_GRAY 58,1776
#define WHITE 59,1819
static int16_t DIR_X[DIR_X60,1862
static int16_t DIR_Y[DIR_Y61,1902
typedef enum __attribute__ ((__packed__)) terrain_type 63,1943
  ter_pc,64,2000
  ter_monster_people,65,2010
  ter_monster_giant,66,2032
  ter_monster_dragon,67,2053
  ter_monster_smaug,68,2075
  ter_monster_ruth,69,2096
  ter_monster_falcor,70,2116
  ter_monster_saphira,71,2138
  ter_monster_norbert,72,2161
  ter_debug,73,2184
  ter_wall,74,2197
  ter_wall_no_room,75,2209
  ter_wall_no_floor,76,2229
  ter_wall_immutable,77,2250
  ter_floor,78,2272
  ter_floor_room,79,2285
  ter_floor_hall,80,2303
  ter_floor_tentative,81,2321
} terrain_type_t;82,2344
typedef struct room 84,2363
} room_t;89,2459
typedef struct dungeon 91,2470
} dungeon_t;104,3239
static uint8_t character_id 106,3253
typedef struct character 109,3321
} character_t;119,3525

heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1186
void print_heap_node_list(70,1488
void heap_init(86,1687
void heap_node_delete(96,1901
void heap_delete(114,2204
heap_node_t *heap_insert(heap_insert125,2369
void *heap_peek_min(heap_peek_min145,2685
static void heap_link(150,2761
static void heap_consolidate(164,3083
void *heap_remove_min(heap_remove_min205,4016
int heap_combine(240,4550
static void heap_cut(269,5189
static void heap_cascading_cut(283,5470
int heap_decrease_key(297,5696
int heap_decrease_key_no_replace(311,5938
int32_t compare(335,6512
char *print_int(print_int340,6611
int main(349,6729

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

macros.h,579
#define MACROS_H2,17
#define dprintf(16,205
#define dfprintf(17,246
#define dprintf(19,307
#define dfprintf(20,328
#define fieldwidth(23,364
#define exit(37,1181
#define fopen(42,1420
#define malloc(76,3322
#define calloc(92,4402
#define strdup(107,5405
#define free(117,6023
#define swap(125,6268
#define memswap(131,6379
#define structdup(137,6506
#define datacmp(144,6889
#define max2(153,7361
#define min2(160,7536
#define max 167,7711
#define min 168,7728
#define max3(170,7746
#define min3(171,7786
#define frand(173,7827
#define structdup(180,7935

main.c,17
int main(11,148

move.c,154
typedef struct path 7,78
} path_t;14,302
static int32_t dist_cmp(16,313
void dijkstra(20,436
void smart_move(141,5386
void non_smart_move(257,10291

move.h,20
#define MOVE_H2,15

rlg229.c,43
static void usage(11,161
int main(20,395

utils.c,25
int makedirectory(9,124

utils.h,72
#define UTILS_H2,16
#define rand_under(4,33
#define rand_range(6,130
