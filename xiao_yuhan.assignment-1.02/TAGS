
heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,1720
# define rand_under(19,395
# define rand_range(23,538
typedef struct corridor_path 25,612
} corridor_path_t;30,715
typedef enum dim 32,735
  dim_x,33,754
  dim_y,34,763
  num_dims35,772
} dim_t;36,783
typedef int16_t pair_t[pair_t38,793
#define DUNGEON_X 40,828
#define DUNGEON_Y 41,863
#define MIN_ROOMS 42,898
#define MAX_ROOMS 43,932
#define ROOM_MIN_X 44,966
#define ROOM_MIN_Y 45,999
#define ROOM_MAX_X 46,1032
#define ROOM_MAX_Y 47,1066
#define mappair(49,1101
#define mapxy(50,1158
#define hardnesspair(51,1193
#define hardnessxy(52,1260
typedef enum __attribute__ ((__packed__)) terrain_type 54,1306
  ter_debug,55,1363
  ter_wall,56,1376
  ter_wall_immutable,57,1388
  ter_floor,58,1410
  ter_floor_room,59,1423
  ter_floor_hall,60,1441
} terrain_type_t;61,1459
typedef struct room 63,1478
} room_t;66,1534
typedef struct dungeon 68,1545
} dungeon_t;81,2314
static uint32_t in_room(83,2328
static int32_t corridor_path_cmp(99,2719
static void dijkstra_corridor(103,2869
static void dijkstra_corridor_inv(202,6604
#define hardnesspair_inv(255,7924
static int connect_two_rooms(305,10561
static int create_cycle(324,11213
static int connect_rooms(366,12778
int gaussian[gaussian379,12971
typedef struct queue_node 387,13127
} queue_node_t;390,13194
static int smooth_hardness(392,13211
static int empty_dungeon(546,17384
static int place_rooms(565,17760
static int make_rooms(629,20251
int gen_dungeon(653,20799
void render_dungeon(663,20921
void delete_dungeon(691,21528
void init_dungeon(695,21567
typedef enum action{action701,21625
  action_load,702,21646
  action_save,703,21661
  action_general,704,21676
} action_t;705,21694
int main(707,21707
