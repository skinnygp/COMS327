
character.c,54
void character_delete(9,117
uint32_t can_see(24,342

character.h,343
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;8,84
typedef struct npc npc_t;9,118
typedef struct pc pc_t;10,144
typedef struct dice_t dice_t;11,168
typedef enum kill_type 13,199
  kill_direct,14,224
  kill_avenged,15,239
  num_kill_types16,255
} kill_type_t;17,272
typedef struct character 19,288
} character_t;35,1019

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.c,1108
typedef struct corridor_path 14,224
} corridor_path_t;19,327
static uint32_t in_room(21,347
static int32_t corridor_path_cmp(37,738
static void dijkstra_corridor(41,888
static void dijkstra_corridor_inv(140,4623
#define hardnesspair_inv(193,5943
static int connect_two_rooms(243,8580
static int create_cycle(262,9232
static int connect_rooms(304,10797
int gaussian[gaussian317,10990
typedef struct queue_node 325,11146
} queue_node_t;328,11213
static int smooth_hardness(330,11230
static int empty_dungeon(488,15506
static int make_stairs(509,15949
static int place_rooms(531,16656
static int make_rooms(595,19181
int gen_dungeon(620,19782
void render_dungeon(630,19921
void delete_dungeon(668,20786
void init_dungeon(675,20920
int write_dungeon_map(682,21077
int write_rooms(695,21306
uint32_t calculate_dungeon_size(715,21725
int write_dungeon(722,21947
int read_dungeon_map(781,23351
int read_rooms(804,23949
int calculate_num_rooms(834,24718
int read_dungeon(842,24958
int read_pgm(916,26689
void render_distance_map(999,28814
void render_tunnel_distance_map(1032,29658

dungeon.h,1031
# define DUNGEON_H2,18
#define DUNGEON_X 9,122
#define DUNGEON_Y 10,157
#define MIN_ROOMS 11,192
#define MAX_ROOMS 12,226
#define ROOM_MIN_X 13,260
#define ROOM_MIN_Y 14,293
#define ROOM_MAX_X 15,326
#define ROOM_MAX_Y 16,360
#define VISUAL_RANGE 17,394
#define PC_SPEED 18,428
#define MAX_MONSTERS 19,462
#define SAVE_DIR 20,496
#define DUNGEON_SAVE_FILE 21,537
#define DUNGEON_SAVE_SEMANTIC 22,578
#define DUNGEON_SAVE_VERSION 23,624
#define mappair(25,659
#define mapxy(26,716
#define hardnesspair(27,751
#define hardnessxy(28,818
#define charpair(29,863
#define charxy(30,927
typedef enum __attribute__ ((__packed__)) terrain_type 32,970
  ter_debug,33,1027
  ter_wall,34,1040
  ter_wall_immutable,35,1052
  ter_floor,36,1074
  ter_floor_room,37,1087
  ter_floor_hall,38,1105
  ter_stair_up,39,1123
  ter_stair_down,40,1139
} terrain_type_t;41,1157
typedef struct room 43,1176
} room_t;46,1232
typedef struct character character_t;48,1243
typedef struct dungeon 50,1282
} dungeon_t;80,2763

event.c,178
static uint32_t next_event_number(4,43
int32_t compare_events(14,369
event_t *new_event(new_event25,689
event_t *update_event(update_event42,967
void event_delete(50,1115

event.h,198
# define EVENT_H2,16
typedef struct character character_t;8,79
typedef enum event_type 10,118
  event_character_turn,11,144
} event_type_t;12,168
typedef struct event 14,185
} event_t;21,302

heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,167
void do_combat(17,250
void move_character(30,571
void do_moves(46,1052
void dir_nearest_wall(106,2973
uint32_t against_wall(118,3388
uint32_t in_corner(130,3876

move.h,104
# define MOVE_H2,15
typedef struct dungeon dungeon_t;8,74
typedef struct character character_t;9,108

npc.c,980
void npc_delete(12,173
static uint32_t max_monster_cells(19,232
void gen_monsters(33,479
void npc_next_pos_rand_tunnel(75,1853
void npc_next_pos_rand(120,2712
void npc_next_pos_line_of_sight(152,3277
void npc_next_pos_line_of_sight_tunnel(176,3977
void npc_next_pos_gradient(211,4796
static void npc_next_pos_00(334,9488
static void npc_next_pos_01(346,9885
static void npc_next_pos_02(364,10510
static void npc_next_pos_03(372,10820
static void npc_next_pos_04(378,10995
static void npc_next_pos_05(390,11399
static void npc_next_pos_06(408,12031
static void npc_next_pos_07(416,12348
static void npc_next_pos_08(422,12523
static void npc_next_pos_09(432,12764
static void npc_next_pos_0a(442,13005
static void npc_next_pos_0b(452,13246
static void npc_next_pos_0c(462,13487
static void npc_next_pos_0d(472,13735
static void npc_next_pos_0e(482,13983
static void npc_next_pos_0f(492,14231
void npc_next_pos(525,15131
uint32_t dungeon_has_npcs(533,15337

npc.h,1112
# define NPC_H2,14
# define NPC_SMART 8,72
# define NPC_TELEPATH 9,110
# define NPC_TUNNEL 10,148
# define NPC_ERRATIC 11,186
# define NPC_BIT04 12,224
# define NPC_BIT05 13,262
# define NPC_BIT06 14,300
# define NPC_BIT07 15,338
# define NPC_BIT08 16,376
# define NPC_BIT09 17,414
# define NPC_BIT10 18,452
# define NPC_BIT11 19,490
# define NPC_BIT12 20,528
# define NPC_BIT13 21,566
# define NPC_BIT14 22,604
# define NPC_BIT15 23,642
# define NPC_BIT16 24,680
# define NPC_BIT17 25,718
# define NPC_BIT18 26,756
# define NPC_BIT19 27,794
# define NPC_BIT20 28,832
# define NPC_BIT21 29,870
# define NPC_BIT22 30,908
# define NPC_BIT23 31,946
# define NPC_BIT24 32,984
# define NPC_BIT25 33,1022
# define NPC_BIT26 34,1060
# define NPC_BIT27 35,1098
# define NPC_BIT28 36,1136
# define NPC_BIT29 37,1174
# define NPC_BIT30 38,1212
# define NPC_BIT31 39,1250
# define has_characteristic(41,1289
typedef struct dungeon dungeon_t;44,1399
typedef struct character character_t;45,1433
typedef uint32_t npc_characteristics_t;46,1471
typedef struct npc 48,1512
} npc_t;53,1633

path.c,247
static dungeon_t *dungeon;dungeon12,633
typedef struct path 14,661
} path_t;17,720
static int32_t dist_cmp(19,731
static int32_t tunnel_cmp(26,1085
void dijkstra(33,1433
#define tunnel_movement_cost(143,5925
void dijkstra_tunnel(146,6062

path.h,60
# define PATH_H2,15
typedef struct dungeon dungeon_t;4,32

pc.c,126
void pc_delete(11,135
uint32_t pc_is_alive(18,195
void place_pc(23,257
void config_pc(33,684
uint32_t pc_in_room(53,1102

pc.h,99
# define PC_H2,13
typedef struct dungeon dungeon_t;8,70
typedef struct pc 10,105
} pc_t;11,125

rlg327.c,195
const char *victory victory16,286
const char *tombstone tombstone47,1857
void usage(68,2908
int main(79,3182
void portion(285,10260
void PC_control(326,11543
void do_look_mode(528,16934

utils.c,25
int makedirectory(9,124

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
