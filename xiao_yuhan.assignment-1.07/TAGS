
character.h,241
# define CHARACTER_H2,20
typedef enum kill_type 8,84
  kill_direct,9,109
  kill_avenged,10,124
  num_kill_types11,140
} kill_type_t;12,157
class character 15,193
typedef void character;34,922
typedef struct dungeon dungeon_t;37,954

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.c,1148
#define RUN_ON_MAC1,0
#define htobe32(22,338
#define htobe16(23,361
#define be32toh(24,384
#define be16toh(25,407
typedef struct corridor_path 29,439
} corridor_path_t;34,542
static uint32_t in_room(36,562
static int32_t corridor_path_cmp(52,953
static void dijkstra_corridor(56,1103
static void dijkstra_corridor_inv(155,4838
#define hardnesspair_inv(208,6158
static int connect_two_rooms(258,8795
static int create_cycle(277,9447
static int connect_rooms(319,11012
int gaussian[gaussian332,11205
typedef struct queue_node 340,11361
} queue_node_t;343,11428
static int smooth_hardness(345,11445
static int empty_dungeon(503,15721
static int place_rooms(523,16142
static int make_rooms(587,18667
static void place_stairs(613,19302
int gen_dungeon(635,19931
void delete_dungeon(679,20804
void init_dungeon(686,20946
int write_dungeon_map(693,21103
int write_rooms(706,21332
uint32_t calculate_dungeon_size(726,21751
int write_dungeon(733,21973
int read_dungeon_map(792,23358
int read_rooms(815,23956
int calculate_num_rooms(845,24725
int read_dungeon(853,24965
int read_pgm(927,26666
void new_dungeon(1076,30388

dungeon.h,1093
# define DUNGEON_H2,18
#define DUNGEON_X 9,122
#define DUNGEON_Y 10,157
#define MIN_ROOMS 11,192
#define MAX_ROOMS 12,226
#define ROOM_MIN_X 13,260
#define ROOM_MIN_Y 14,293
#define ROOM_MAX_X 15,326
#define ROOM_MAX_Y 16,360
#define PC_VISUAL_RANGE 17,394
#define NPC_VISUAL_RANGE 18,427
#define PC_SPEED 19,461
#define MAX_MONSTERS 20,495
#define SAVE_DIR 21,529
#define DUNGEON_SAVE_FILE 22,570
#define DUNGEON_SAVE_SEMANTIC 23,611
#define DUNGEON_SAVE_VERSION 24,657
#define mappair(26,692
#define mapxy(27,749
#define hardnesspair(28,784
#define hardnessxy(29,851
#define charpair(30,896
#define charxy(31,964
typedef enum __attribute__ ((__packed__)) terrain_type 33,1011
  ter_debug,34,1068
  ter_unknown,35,1081
  ter_wall,36,1162
  ter_wall_immutable,37,1174
  ter_floor,38,1196
  ter_floor_room,39,1209
  ter_floor_hall,40,1227
  ter_stairs,41,1245
  ter_stairs_up,42,1259
  ter_stairs_down43,1276
} terrain_type_t;44,1294
typedef struct room 46,1313
} room_t;49,1369
typedef void pc;54,1417
typedef struct dungeon 57,1443
} dungeon_t;86,2895

event.c,178
static uint32_t next_event_number(4,43
int32_t compare_events(14,369
event_t *new_event(new_event25,689
event_t *update_event(update_event42,967
void event_delete(50,1115

event.h,152
# define EVENT_H2,16
typedef enum event_type 8,79
  event_character_turn,9,105
} event_type_t;10,129
typedef struct event 12,146
} event_t;19,261

heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

io.c,953
static dungeon_t *dungeon;dungeon14,228
typedef struct io_message 16,256
} io_message_t;21,480
static io_message_t *io_head,io_head23,497
static io_message_t *io_head, *io_tail;io_tail23,497
void io_init_terminal(25,538
void io_reset_terminal(42,1023
void io_queue_message(54,1183
static void io_print_message_queue(80,1573
void io_calculate_offset(115,2800
void io_update_offset(133,3243
void io_display_tunnel(154,3730
void io_display_distance(166,3955
static char hardness_to_char[hardness_to_char178,4184
void io_display_hardness(181,4286
void io_display(201,5078
void io_look_mode(270,7227
void io_display_monster_list(361,8724
uint32_t io_teleport_pc(370,8922
static const char *adjectives[adjectives398,9564
static void io_scroll_monster_list(431,10325
static void io_list_monsters_display(460,10779
static int compare_monster_distance(509,12466
static void io_list_monsters(518,12764
void io_handle_input(546,13396

io.h,58
# define IO_H2,13
typedef struct dungeon dungeon_t;4,28

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,234
void do_combat(18,266
void move_character(35,712
void do_moves(56,1280
void dir_nearest_wall(117,3285
uint32_t against_wall(129,3698
uint32_t in_corner(141,4184
static void new_dungeon_level(160,4811
uint32_t move_pc(176,5103

move.h,93
# define MOVE_H2,15
typedef void character;11,118
typedef struct dungeon dungeon_t;14,151

npc.h,1071
# define NPC_H2,14
typedef uint32_t npc_characteristics_t;9,96
class npc 12,157
typedef void npc;21,320
# define NPC_SMART 24,347
# define NPC_TELEPATH 25,385
# define NPC_TUNNEL 26,423
# define NPC_ERRATIC 27,461
# define NPC_BIT04 28,499
# define NPC_BIT05 29,537
# define NPC_BIT06 30,575
# define NPC_BIT07 31,613
# define NPC_BIT08 32,651
# define NPC_BIT09 33,689
# define NPC_BIT10 34,727
# define NPC_BIT11 35,765
# define NPC_BIT12 36,803
# define NPC_BIT13 37,841
# define NPC_BIT14 38,879
# define NPC_BIT15 39,917
# define NPC_BIT16 40,955
# define NPC_BIT17 41,993
# define NPC_BIT18 42,1031
# define NPC_BIT19 43,1069
# define NPC_BIT20 44,1107
# define NPC_BIT21 45,1145
# define NPC_BIT22 46,1183
# define NPC_BIT23 47,1221
# define NPC_BIT24 48,1259
# define NPC_BIT25 49,1297
# define NPC_BIT26 50,1335
# define NPC_BIT27 51,1373
# define NPC_BIT28 52,1411
# define NPC_BIT29 53,1449
# define NPC_BIT30 54,1487
# define NPC_BIT31 55,1525
# define has_characteristic(57,1564
typedef struct dungeon dungeon_t;60,1674

path.c,247
static dungeon_t *dungeon;dungeon12,633
typedef struct path 14,661
} path_t;17,720
static int32_t dist_cmp(19,731
static int32_t tunnel_cmp(26,1085
void dijkstra(33,1433
#define tunnel_movement_cost(143,5927
void dijkstra_tunnel(146,6064

path.h,60
# define PATH_H2,15
typedef struct dungeon dungeon_t;4,32

pc.h,60
# define PC_H2,13
class pc 11,136
typedef void pc;19,300

rlg327.c,115
const char *victory victory12,171
const char *tombstone tombstone43,1738
void usage(64,2785
int main(75,3059

utils.c,25
int makedirectory(9,124

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
